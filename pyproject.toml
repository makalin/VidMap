[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "vidmap"
version = "1.0.0"
description = "Map-like indexing for long videos with AI-powered scene analysis and zoomable timeline navigation"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "VidMap Team", email = "makalin@github.com"}
]
maintainers = [
    {name = "VidMap Team", email = "makalin@github.com"}
]
keywords = ["video", "ai", "timeline", "scene-detection", "transcription", "search"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Video",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.10"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "psycopg2-binary>=2.9.0",
    "sqlite3",
    "ffmpeg-python>=0.2.0",
    "opencv-python>=4.8.0",
    "pillow>=10.0.0",
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    "scikit-learn>=1.3.0",
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "transformers>=4.35.0",
    "sentence-transformers>=2.2.0",
    "faiss-cpu>=1.7.0",
    "celery>=5.3.0",
    "redis>=5.0.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "pyyaml>=6.0",
    "python-multipart>=0.0.6",
    "aiofiles>=23.0.0",
    "httpx>=0.25.0",
    "tenacity>=8.2.0",
]

[project.optional-dependencies]
gpu = [
    "torch[cu118]>=2.0.0",
    "torchvision[cu118]>=0.15.0",
    "faiss-gpu>=1.7.0",
]
whisper = [
    "openai-whisper>=20231117",
]
ocr = [
    "pytesseract>=0.3.10",
    "paddleocr>=2.7.0",
]
diarization = [
    "pyannote.audio>=3.0.0",
]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]

[project.urls]
Homepage = "https://github.com/makalin/VidMap"
Documentation = "https://github.com/makalin/VidMap#readme"
Repository = "https://github.com/makalin/VidMap.git"
"Bug Tracker" = "https://github.com/makalin/VidMap/issues"
"Changelog" = "https://github.com/makalin/VidMap/blob/main/CHANGELOG.md"

[project.scripts]
vidmap = "vidmap.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
vidmap = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["vidmap"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
